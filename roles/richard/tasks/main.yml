---
- name: richard site directory tree exists
  file: path="{{ item }}" state=directory owner="{{ richard_user }}" group="{{ richard_group }}"
  with_items:
    - "{{ richard_dir }}"
    - "{{ richard_dir }}/logs"

- name: helpful links to nginx logs exist
  file: src=/var/log/nginx dest="{{ richard_dir }}/logs/nginx" state=link

- name: make sure upstart uwsgi log file exists before we symlink it
  file: path=/var/log/upstart/richard.uwsgi.log state=touch

- name: helpful link to upstart uwsgi log exists
  file: src=/var/log/upstart/richard.uwsgi.log dest="{{ richard_dir }}/logs/richard.uwsgi.log" state=link

- name: richard repo is cloned
  git: repo="{{ richard_repo }}"
       dest="{{ richard_source }}"
       version="{{ richard_version }}"
  sudo_user: "{{ richard_user }}"
  notify:
    - restart richard

- name: richard repo clone belongs to richard user
  file: path="{{ richard_source }}"
        recurse=yes
        owner="{{ richard_user }}"

- name: site repo is cloned (if it exists)
  git: repo="{{ site_repo }}"
       version="{{ site_version }}"
       dest="{{ site_source }}"
  sudo_user: "{{ richard_user }}"
  when: site_repo != "" and site_version != "" and site_source != ""
  notify:
    - restart richard

- name: site repo clone belongs to richard user
  file: path="{{ site_source }}"
        recurse=yes
        owner="{{ richard_user }}"
  when: site_repo != "" and site_version != "" and site_source != ""

- name: richard dependencies are installed
  pip: name=".\[dev,postgresql\]"
       chdir="{{ richard_source }}"
       extra_args="-e"
  notify:
    - restart richard

- name: richard database is synced with models
  django_manage: >
    command="syncdb --noinput --migrate"
    app_path="{{ richard_source }}"
    settings="{{ DJANGO_SETTINGS_MODULE }}"
  sudo_user: "{{ richard_user }}"
  environment: "{{ richard_environment }}"
  notify:
    - restart richard

- name: richard database is up to date with migrations
  django_manage: >
    command=migrate
    app_path="{{ richard_source }}"
    settings="{{ DJANGO_SETTINGS_MODULE }}"
  sudo_user: "{{ richard_user }}"
  environment: "{{ richard_environment }}"
  notify:
    - restart richard

- name: richard static files are up to date via collectstatic
  django_manage: >
    command="collectstatic --noinput"
    app_path="{{ richard_source }}"
    settings="{{ DJANGO_SETTINGS_MODULE }}"
  sudo_user: "{{ richard_user }}"
  environment: "{{ richard_environment }}"
  notify:
    - restart richard

- name: rebuild index
  django_manage: >
    command="rebuild_index --noinput"
    app_path="{{ richard_source }}"
    settings="{{ DJANGO_SETTINGS_MODULE }}"
  sudo_user: "{{ richard_user }}"
  environment: "{{ richard_environment }}"

# FIXME: The path here isn't necessarily where the whoosh index is.
- name: index belongs to richard user
  file: path="{{ richard_source }}"
        recurse=yes
        owner="{{ richard_user }}"

- name: richard run_manage.sh is available
  template: >
    src=richard.run_manage.sh.j2
    dest="{{ richard_run_manage_sh }}"
    owner=richard
    group=richard
    mode=755

- name: richard uwsgi.ini is available
  template: >
    src=richard.uwsgi.ini.j2
    dest="{{ richard_uwsgi_ini }}"
    owner=root
    group=root
    mode=644

- name: upstart job is configured
  template: >
    src=richard.uwsgi.conf.j2
    dest=/etc/init/richard.uwsgi.conf
  notify:
    - restart richard

- name: richard nginx site is available
  template: >
    src=richard_web.conf.j2
    dest=/etc/nginx/sites-available/richard_web.conf

- name: default nginx site is disabled
  file:
    path=/etc/nginx/sites-enabled/default
    state=absent

- name: richard nginx site is enabled
  file:
    src=/etc/nginx/sites-available/richard_web.conf
    dest=/etc/nginx/sites-enabled/richard_web.conf
    state=link
  notify:
    - restart nginx
